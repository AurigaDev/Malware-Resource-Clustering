import os,cPickle as pickle,sys
from scrape import Resource
from collections import Counter
import time

import numpy as np

#############################################   Input                     #########################################
#
#	Data/*					file containing resources lists, avr and avl score, number of trojan detection, link address, md5 name
#	Malware_dict			Dictionary of resources for all malware
#	links					list of links for malware

#############################################   Output                     #########################################
#
#	matrixbin				Distance Matrix, detailing difference in malware
#	malwareclass			list detailing antivirus score, detailing file 0 - q

File_Count = {}
Reg_Count = {}
Mux_Count = {}
Res_Count = [File_Count, Reg_Count, Mux_Count]

malware_files = []
malware_class = []
malware_names = []

malware_names.append("")
malware_class.append(0.0)

for k in range(1,500):
	file = "Data/file"+str(k)
	resources = pickle.load(open(file,"rb"))
	for i in range(0,3):
		if i == 0:
			malware_files.append(resources.resources[i])
			malware_names.append(resources.name)
			if resources.avr <0.0:
				malware_class.append(0)
			else:
				malware_class.append(resources.avr)

#r = len(files)
r = 499
x = 0
y = 0

dis_mat = np.zeros((r, r))
'''
# Substring Sieve
for i in range(0,r):
	malware_files[i].sort(key = lambda s: -len(s))
	out = []
	for s in malware_files[i]:
		if not any([s in o for o in out]):
			out.append(s)
	malware_files[i] = out
'''
for x in range(0, r):
	for y in range(0, r):
		try:
			union = list(set(filter(None, malware_files[x])) | set(filter(None, malware_files[y])))
			dis_mat[x,y] = len(list(set(set(filter(None, malware_files[x]))^(set(set(filter(None, malware_files[y])))))))*1.0/len(union)
		except:
			dis_mat[x,y] = 0

for x in range(0, r):
	for y in range(0, r):
		print dis_mat[x,y],
	print
			
pickle.dump( dis_mat, open( "matrixbin", "wb" ) )
pickle.dump( malware_class, open( "malwareclass", "wb" ) )